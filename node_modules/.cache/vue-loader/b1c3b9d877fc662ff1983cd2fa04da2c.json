{"remainingRequest":"/home/petr/Documents/learn-vue/notes/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/petr/Documents/learn-vue/notes/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/petr/Documents/learn-vue/notes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/petr/Documents/learn-vue/notes/src/components/NewNote.vue?vue&type=template&id=3f0406b2&scoped=true&","dependencies":[{"path":"/home/petr/Documents/learn-vue/notes/src/components/NewNote.vue","mtime":1556610036874},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"new-note\" }, [\n    _c(\"div\", { staticClass: \"new-note__title-satus\" }, [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.note.title,\n            expression: \"note.title\"\n          }\n        ],\n        attrs: { type: \"text\" },\n        domProps: { value: _vm.note.title },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.note, \"title\", $event.target.value)\n          }\n        }\n      }),\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.note.selected,\n              expression: \"note.selected\"\n            }\n          ],\n          staticClass: \"select\",\n          on: {\n            change: function($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function(o) {\n                  return o.selected\n                })\n                .map(function(o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.$set(\n                _vm.note,\n                \"selected\",\n                $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n              )\n            }\n          }\n        },\n        _vm._l(_vm.note.statuses, function(item) {\n          return _c(\n            \"option\",\n            { key: item.value, domProps: { value: item.value } },\n            [_vm._v(_vm._s(item.text))]\n          )\n        }),\n        0\n      )\n    ]),\n    _c(\"textarea\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.note.descr,\n          expression: \"note.descr\"\n        }\n      ],\n      domProps: { value: _vm.note.descr },\n      on: {\n        input: function($event) {\n          if ($event.target.composing) {\n            return\n          }\n          _vm.$set(_vm.note, \"descr\", $event.target.value)\n        }\n      }\n    }),\n    _c(\n      \"button\",\n      { staticClass: \"btn btnPrimary\", on: { click: _vm.addNote } },\n      [_vm._v(\"New note\")]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}