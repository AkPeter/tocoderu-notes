{"remainingRequest":"/home/petr/Documents/learn-vue/notes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/petr/Documents/learn-vue/notes/src/components/Notes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/petr/Documents/learn-vue/notes/src/components/Notes.vue","mtime":1556610259944},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/petr/Documents/learn-vue/notes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: {\n        notes: {\n            type: Array,\n            required: true,\n        },\n        grid: {\n            tupe: Boolean,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            //show: true,\n        }\n    },\n    methods: {\n        removeNote (index) {\n            console.log( `Note id: ${index} - removed` )\n            this.$emit('remove', index)\n        },\n        // editText (index) {\n        //     this.$emit('edit', index)\n        //     console.log( `Note id: ${index} - edited` )\n        // },\n        editTitle (note) {\n            this.$emit('edit', note)\n            //this.$refs.title.focus(note)\n            //note.editable = false\n            //console.log(note)\n        },\n        updateTitle (note) {\n            this.$emit('update', note)\n            //note.editable = true\n            //console.log(note)\n        },\n        notUpdateTitle (note) {\n            this.$emit('notupdate', note)\n        }\n    }\n}\n",{"version":3,"sources":["Notes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Notes.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"notes\">\n        <div class=\"note\" :class=\"[{full: !grid}, 'status status-' + note.selected]\" v-for=\"(note, index) in notes\" :key=\"index\">\n            <span @click=\"removeNote(index)\" class=\"note-remove\">Remove</span>\n            <div class=\"note-header\">\n                <p v-if=\"note.editable\" @click=\"editTitle(note)\"> {{note.title}} {{note.selected}} </p>\n                <input \n                    v-if=\"!note.editable\" \n                    ref=\"title\" \n                    v-model=\"note.title\" \n                    @keyup.esc=\"notUpdateTitle(note)\" \n                    @keyup.enter=\"updateTitle(note)\" type=\"text\" />\n            </div>\n            <div class=\"note-body\">\n                <p> {{note.descr}} </p>\n                <span> {{note.date}} </span>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        notes: {\n            type: Array,\n            required: true,\n        },\n        grid: {\n            tupe: Boolean,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            //show: true,\n        }\n    },\n    methods: {\n        removeNote (index) {\n            console.log( `Note id: ${index} - removed` )\n            this.$emit('remove', index)\n        },\n        // editText (index) {\n        //     this.$emit('edit', index)\n        //     console.log( `Note id: ${index} - edited` )\n        // },\n        editTitle (note) {\n            this.$emit('edit', note)\n            //this.$refs.title.focus(note)\n            //note.editable = false\n            //console.log(note)\n        },\n        updateTitle (note) {\n            this.$emit('update', note)\n            //note.editable = true\n            //console.log(note)\n        },\n        notUpdateTitle (note) {\n            this.$emit('notupdate', note)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.notes {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    align-items: flex-start;\n}\n.note {\n    position: relative;\n    width: 49%;\n    margin-bottom: 20px;\n    background-color: #fff;\n    border-radius: 6px;\n    padding: 20px;\n\n    &.full {\n        width: 100%;\n    }\n\n    &.status {\n        border-left: 2px solid;\n        &-1 {\n            border-color: aqua;\n        }\n        &-2 {\n            border-color: yellow;\n        }\n        &-3 {\n            border-color: red;\n        }\n    }\n\n    &-header {\n        display: flex;\n        flex-flow: row wrap;\n        justify-content: space-between;\n        align-items: center;\n        p {\n            font-size: 22px;\n            color: darkcyan;\n            font-weight: bold;\n        }\n        svg {\n            color: #777;\n            margin-right: 12px;\n            cursor: pointer;\n            &:last-child {\n                margin-right: 0;\n            }\n            &.active {\n                color: #000;\n            }\n        }\n    }\n\n    &-body {\n        p {\n            padding: 15px 0;\n        }\n        span {\n            font-size: 12px;\n            color: #777;\n        }\n    }\n\n    &-remove {\n        position: absolute;\n        top: 15px;\n        right: 15px;\n        font-size: 12px;\n        cursor: pointer;\n        color: #777;\n    }\n}\n</style>\n\n"]}]}